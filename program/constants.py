from dydx3 import Client
from dydx3.constants import API_HOST_SEPOLIA, API_HOST_MAINNET
from decouple import config

#!! Select Mode !!
MODE = "DEVELOPMENT"

#Close all positions and orders
ABORT_ALL_POSITIONS = False

# Find Cointergrated Pairs 
FIND_COINTEGRATED = True

#Place trade

PLACE_TRADE = True

#Resolution
RESOLUTION = "1HOUR"

#Stats window
Window =21

# Thresholds - opening
MAX_HALF_LIFE =24
ZSCORE_THRESH =1.5
USD_PER_TRADE = 50
USD_MIN_COLLATERAL = 1999

#THRESHOLDS - Clossing
CLOSE_AT_ZSCORE_CROSS = True

#ETHERIUM ADDRESS
ETHEREUM_ADDRESS = "0x6447BD91DB9eD3fb8893a0f46EfaaD0701700221"

#KEYS PRODUCTION
#Must be on mainnet on DYDX
STARK_PRIVATE_KEY_MAINNET = config("STARK_PRIVATE_KEY_MAINNET")
DYDX_API_KEY_MAINNET = config("DYDX_API_KEY_MAINNET")
DYDX_API_SECRET_MAINNET = config("DYDX_API_SECRET_MAINNET")
DYDX_API_PASSPHRASE_MAINNET = config("DYDX_API_PASSPHRASE_MAINNET")


#KEYS - Development
#Must be on testnet on DYDX
STARK_PRIVATE_KEY_TESTNET = config("STARK_PRIVATE_KEY_TESTNET")
DYDX_API_KEY_TESTNET = config("DYDX_API_KEY_TESTNET")
DYDX_API_SECRET_TESTNET = config("DYDX_API_SECRET_TESTNET")
DYDX_API_PASSPHRASE_TESTNET = config("DYDX_API_PASSPHRASE_TESTNET")

#KEYS - Export
STARK_PRIVATE_KEY = STARK_PRIVATE_KEY_MAINNET if MODE == "PRODUCTION" else STARK_PRIVATE_KEY_TESTNET
DYDX_API_KEY = DYDX_API_KEY_MAINNET if MODE == "PRODUCTION" else DYDX_API_KEY_TESTNET
DYDX_API_SECRET = DYDX_API_SECRET_MAINNET if MODE == "PRODUCTION" else DYDX_API_SECRET_TESTNET
DYDX_API_PASSPHRASE = DYDX_API_PASSPHRASE_MAINNET if MODE == "PRODUCTION" else DYDX_API_PASSPHRASE_TESTNET

#Host -Export
HOST = API_HOST_MAINNET if MODE == "PRODUCTION" else API_HOST_SEPOLIA

#HTTP PROVIDERS
HTTP_PROVIDER_MAINNET = ""
HTTP_PROVIDER_TESTNET = "https://eth-sepolia.g.alchemy.com/v2/rmDLLx0uoz8O3oG8yLd8BqNwH35KPkro"

HTTP_PROVIDER = HTTP_PROVIDER_MAINNET if MODE == "PRODUCTION" else HTTP_PROVIDER_TESTNET